@using Models.Database
@model HomeModel
@*@inject IJsonHelper Json;*@
@{
    ViewData["Title"] = "Home Page";
}

@section ScriptsHead{
    <script>

    </script>
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>

    <div class="row">
        <div id="divLeft" class="col" style="border: 1px solid #F00">

            @*<select v-model="selected" multiple style="width:100%">
                    <option v-for="item in list">{{ item.name }}</option>
                </select>
                <br>
                <span>Selected: {{ selected }}</span>*@
            <dl>
                <dd v-for="item in list">
                    <input v-bind:id="item.id" type="checkbox" v-bind:value="item.id" v-model="selected" />
                    <label v-bind:for="item.id" v-on:dblclick="dbclick(item.id)"> {{item["name"]}}</label>
                </dd>
            </dl>
            @*<ol>
                    <li v-for="item in list" v-on:dblclick="dbclick">
                        {{item["name"]}}
                    </li>
                </ol>*@
            @*@foreach (Left left in this.Model.Lefts)
                {
                    @left.Title;
                    <br />
                }*@
        </div>
        <div id="divButtons" class="col">
            <button id="btnMoveToRight" v-on:click="moveToRight">>>>>></button>
            <br />
            <br />
            <br />
            <br />
            <button id="btnMoveToLeft" v-on:click="moveToLeft"><<<<<</button>
            <br />
            <br />
            <button id="btnGenerateEmail" v-on:click="generateEmail">Generate Email</button>
        </div>
        <div id="divRight" class="col" style="border: 1px solid #F00">
            <dl>
                <dd v-for="item in list">
                    <input v-bind:id="item.id" type="checkbox" v-bind:value="item.id" v-model="selected" />
                    <label v-bind:for="item.id" v-on:dblclick="dbclick(item.id)"> {{item["name"]}}</label>
                </dd>
            </dl>

            @*<ol>
                    <li v-for="item in list">
                        {{item["title"]}}
                    </li>
                </ol>*@
            @*@foreach (Right right in this.Model.Rights)
                {
                    @right.Title;
                    <br />
                }*@
        </div>
    </div>
    <div id="divMail" class="row" style="border: 1px solid #F00">
        Hello Alan,
        <ul>
            <li v-for="item in list" v-bind:key="item.id" v-bind:value="item.name">
                {{ item.name }}
            </li>
        </ul>
    </div>
</div>

@section ScriptFoot
{
    <script>
        var leftValues =@Html.Raw(Json.Serialize(this.Model.Lefts));
        var rightValues = @Html.Raw(Json.Serialize(this.Model.Rights));
        var mailValues = [];

        var selectLeftValus = []; // 选中的左边数据
        var selectRightValues = []; // 选中的右边数据

        var btnMoveToRight = new Vue({
            el: '#divButtons',
            methods: {
                moveToRight: function () {
                    console.log("moveToRight");
                    // 数据移动到右边
                    moveToRight(divLeft.selected);

                    // 清除选择列表
                    divLeft.selected = [];

                },
                moveToLeft: function () {
                    console.log("moveToLeft");
                    // 数据移动到左边
                    moveToLeft(divRight.selected);

                    // 清除选择列表
                    divRight.selected = [];
                },
                generateEmail: function () {
                    console.log("generateEmail");
                    // 创建email
                    mailValues.splice(0, mailValues.length);
                    // 从右边获取列表，遍历
                    for (i = 0; i < rightValues.length; i++) {
                        var item = findRight(rightValues[i].id);
                        mailValues.push(item);
                        // $("#divMail");
                    }
                },
            },
        });

        var divLeft = new Vue({
            el: '#divLeft',
            data: {
                list: leftValues,
                selected: selectLeftValus,
            },
            methods: {
                dbclick: function (id) {
                    // alert(id)
                    moveToRight([id]);
                },
            }
        });

        var divRight = new Vue({
            el: '#divRight',
            data: {
                list: rightValues,
                selected: selectRightValues,
            },
            methods: {
                dbclick: function (id) {
                    //alert(id)
                    moveToLeft([id]);
                },
            }
        });

        var divMail = new Vue({
            el: '#divMail',
            data: {
                list: mailValues,
            },
        });

        /**
         * 从左侧列表数据中查找指定的项目
         */
        function findLeft(id) {
            var newArr = leftValues.filter(function (p) {
                return p.id == id;
            });
            return newArr[0];
        }

        /**
         * 从右侧列表数据中查找指定的项目
         */
        function findRight(id) {
            var newArr = rightValues.filter(function (p) {
                return p.id == id;
            });
            return newArr[0];
        }

        /**
         * 数据移动到右边
         */
        function moveToRight(ids) {
            // 数据移动到右边

            // $(post) 在成功的返回值函数中做一下操作
            // 选中项目添加到右边列表中
            for (i = 0; i < ids.length; i++) {
                var item = findLeft(ids[i]);
                rightValues.push(item);
            }

            // 从左边列表中移除选定项目
            for (i = 0; i < ids.length; i++) {
                leftValues.forEach(function (item, index, arr) {
                    if (item.id == ids[i]) {
                        arr.splice(index, 1);
                    }
                });
            }
        }

        /**
         * 数据移动到左边
         */
        function moveToLeft(ids) {
            // $(post) 在成功的返回值函数中做一下操作
            // 选中项目添加到右边列表中
            for (i = 0; i < ids.length; i++) {
                var item = findRight(ids[i]);
                leftValues.push(item);
            }

            // 从左边列表中移除选定项目
            for (i = 0; i < ids.length; i++) {
                rightValues.forEach(function (item, index, arr) {
                    if (item.id == ids[i]) {
                        arr.splice(index, 1);
                    }
                });
            }
        }

    </script>
}
